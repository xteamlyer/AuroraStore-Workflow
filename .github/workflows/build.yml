name: Build
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Specify the branch to clone (e.g., master or dev)'
        required: true
        default: 'dev'
      huawei:
        description: 'Need Huawei build?'
        required: true
        type: boolean
        default: false

jobs:
  build:
    name: Build-${{ matrix.build-type }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type: [nightly, nightlz]

    steps:
    - uses: actions/checkout@main
      with:
        repository: 'whyorean/AuroraStore'
        ref: '${{ github.event.inputs.branch }}'
        lfs: 'true'
        submodules: 'recursive'

    - name: Set up JDK 22
      uses: actions/setup-java@main
      with:
        java-version: 22
        distribution: temurin

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@main

    - name: Patch settings.gradle.kts for Huawei
      if: ${{ inputs.huawei }}
      run: |
        sed -i 's/includeModule("com.huawei.hms", "ag-coreservice")/includeGroup("com.huawei.hms")\n            includeGroup("com.huawei.android.hms")/' settings.gradle.kts

    - name: Patch build.gradle.kts for Nightlz & signing
      run: |
        if [[ "${{ matrix.build-type }}" == "nightlz" ]]; then
          sed -i 's/applicationIdSuffix = ".nightly"/applicationIdSuffix = ".nightlz"/' app/build.gradle.kts
        fi

        awk '
        /register\("nightly"\)/ { flag=1 }
        flag && /versionNameSuffix/ {
          print $0 ORS "            signingConfig = signingConfigs.getByName(\"aosp\")";
          flag=0; next
        }
        { print }
        ' app/build.gradle.kts > app/build.gradle.kts.tmp && mv app/build.gradle.kts.tmp app/build.gradle.kts

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build vanilla nightly
      run: ./gradlew assembleVanillaNightly

    - name: Build huawei
      if: ${{ inputs.huawei }}
      run: ./gradlew assembleHuaweiRelease

    - name: Upload Build Artifact
      uses: actions/upload-artifact@main
      with:
        name: AuroraStore-${{ matrix.build-type }}
        path: app/build/outputs/*
